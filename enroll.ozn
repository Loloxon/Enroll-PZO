output ((([("assignment = ["++join(",",[("{"++join(", ",[show(g) | g in Group where fix(GroupAssignmentB[s,g]), ]))++"}" | s in Student, ]))++"];\n"]++[("total_late_disappointment = "++show(sum([late_disappointment[S] | S in Student, ])))++";\n"])++[("total_break_disappointment = "++show(sum([break_disappointment[S] | S in Student, ])))++";\n"])++[("total_preference_disappointment = "++show(sum(preference_disappointment)))++";\n"])++[("objective = "++show(objective))++";\n"];
int: n_time_units_in_hour = 12;
int: late_to_disappointment_multiplier = 2;
int: break_to_disappointment_multiplier = 1;
set of int: Student = 1..5;
set of int: Class = 1..2;
set of int: Group = 1..6;
set of int: Day = 1..2;
array [Student,Group] of int: student_prefers = [|-1,4,8,6,2,4|2,2,2,2,0,6|7,3,6,1,7,3|7,6,4,3,-1,1|1,-1,-1,-1,-1,-1|];
array [Class] of int: class_duration = [18,24];
array [Group] of int: group_start = [96,96,108,96,108,110];
array [Group] of int: group_day = [1,2,2,1,1,2];
array [Student,Class] of int: GroupAssignment;
array [Student,Class] of int: got_preferences = array2d(Student,Class,[if GroupAssignment[S,C]!=0 then student_prefers[S,GroupAssignment[S,C]] else -1 endif | S in Student, C in Class, ]);
array [Student,Class] of int: best_preferences = [|8,6|2,6|7,7|7,3|1,-1|];
array [Student] of int: preference_disappointment = [sum([best_preferences[S,C]-got_preferences[S,C] | C in Class, ]) | S in Student, ];
array [Student,Day] of int: staying_at_uni = array2d(Student,Day,[max(max([if GroupAssignment[S,C]!=0 /\ group_day[GroupAssignment[S,C]]==D then group_start[GroupAssignment[S,C]]+class_duration[C] else 0 endif | C in Class, ])-min([if GroupAssignment[S,C]!=0 /\ group_day[GroupAssignment[S,C]]==D then group_start[GroupAssignment[S,C]] else n_time_units_in_hour*24 endif | C in Class, ]),0) | S in Student, D in Day, ]);
array [Student,Day] of int: length_of_lessons;
array [Student] of int: break_disappointment = [sum([staying_at_uni[S,D]-length_of_lessons[S,D] | D in Day where staying_at_uni[S,D]>=0, ]) | S in Student, ];
array [Student] of int: late_disappointment;
int: objective = sum([pow(preference_disappointment[S]+break_to_disappointment_multiplier*break_disappointment[S]+late_to_disappointment_multiplier*late_disappointment[S],2) | S in Student, ]);
bool: X_INTRODUCED_4765_ = reverse_map(X_INTRODUCED_8425_);
test reverse_map(int: x) = x==1;
int: X_INTRODUCED_8425_ = 0;
bool: X_INTRODUCED_4764_ = reverse_map(X_INTRODUCED_8424_);
int: X_INTRODUCED_8424_ = 0;
bool: X_INTRODUCED_4763_ = reverse_map(X_INTRODUCED_8423_);
int: X_INTRODUCED_8423_ = 0;
bool: X_INTRODUCED_4762_ = reverse_map(X_INTRODUCED_8411_);
int: X_INTRODUCED_8411_;
bool: X_INTRODUCED_4761_ = reverse_map(X_INTRODUCED_8399_);
int: X_INTRODUCED_8399_;
bool: X_INTRODUCED_4760_ = reverse_map(X_INTRODUCED_8387_);
int: X_INTRODUCED_8387_;
bool: X_INTRODUCED_4759_ = reverse_map(X_INTRODUCED_8375_);
int: X_INTRODUCED_8375_;
bool: X_INTRODUCED_4758_ = reverse_map(X_INTRODUCED_8363_);
int: X_INTRODUCED_8363_;
bool: X_INTRODUCED_4757_ = reverse_map(X_INTRODUCED_8351_);
int: X_INTRODUCED_8351_;
bool: X_INTRODUCED_4756_ = reverse_map(X_INTRODUCED_8339_);
int: X_INTRODUCED_8339_;
bool: X_INTRODUCED_4755_ = reverse_map(X_INTRODUCED_8327_);
int: X_INTRODUCED_8327_;
bool: X_INTRODUCED_4754_ = reverse_map(X_INTRODUCED_8315_);
int: X_INTRODUCED_8315_;
bool: X_INTRODUCED_4753_ = reverse_map(X_INTRODUCED_8303_);
int: X_INTRODUCED_8303_;
bool: X_INTRODUCED_4752_ = reverse_map(X_INTRODUCED_8291_);
int: X_INTRODUCED_8291_;
bool: X_INTRODUCED_4751_ = reverse_map(X_INTRODUCED_8279_);
int: X_INTRODUCED_8279_;
bool: X_INTRODUCED_4750_ = reverse_map(X_INTRODUCED_8267_);
int: X_INTRODUCED_8267_;
bool: X_INTRODUCED_4749_ = reverse_map(X_INTRODUCED_8255_);
int: X_INTRODUCED_8255_;
bool: X_INTRODUCED_4748_ = reverse_map(X_INTRODUCED_8243_);
int: X_INTRODUCED_8243_;
bool: X_INTRODUCED_4747_ = reverse_map(X_INTRODUCED_8231_);
int: X_INTRODUCED_8231_;
bool: X_INTRODUCED_4746_ = reverse_map(X_INTRODUCED_8219_);
int: X_INTRODUCED_8219_;
bool: X_INTRODUCED_4745_ = reverse_map(X_INTRODUCED_8207_);
int: X_INTRODUCED_8207_;
bool: X_INTRODUCED_4744_ = reverse_map(X_INTRODUCED_8195_);
int: X_INTRODUCED_8195_;
bool: X_INTRODUCED_4743_ = reverse_map(X_INTRODUCED_8183_);
int: X_INTRODUCED_8183_;
bool: X_INTRODUCED_4742_ = reverse_map(X_INTRODUCED_8171_);
int: X_INTRODUCED_8171_;
bool: X_INTRODUCED_4741_ = reverse_map(X_INTRODUCED_8159_);
int: X_INTRODUCED_8159_;
bool: X_INTRODUCED_4740_ = reverse_map(X_INTRODUCED_8147_);
int: X_INTRODUCED_8147_;
bool: X_INTRODUCED_4739_ = reverse_map(X_INTRODUCED_8135_);
int: X_INTRODUCED_8135_;
bool: X_INTRODUCED_4738_ = reverse_map(X_INTRODUCED_8123_);
int: X_INTRODUCED_8123_;
bool: X_INTRODUCED_4737_ = reverse_map(X_INTRODUCED_8111_);
int: X_INTRODUCED_8111_;
bool: X_INTRODUCED_4736_ = reverse_map(X_INTRODUCED_8099_);
int: X_INTRODUCED_8099_;
array [Student,Group] of bool: GroupAssignmentB = [|X_INTRODUCED_4736_,X_INTRODUCED_4737_,X_INTRODUCED_4738_,X_INTRODUCED_4739_,X_INTRODUCED_4740_,X_INTRODUCED_4741_|X_INTRODUCED_4742_,X_INTRODUCED_4743_,X_INTRODUCED_4744_,X_INTRODUCED_4745_,X_INTRODUCED_4746_,X_INTRODUCED_4747_|X_INTRODUCED_4748_,X_INTRODUCED_4749_,X_INTRODUCED_4750_,X_INTRODUCED_4751_,X_INTRODUCED_4752_,X_INTRODUCED_4753_|X_INTRODUCED_4754_,X_INTRODUCED_4755_,X_INTRODUCED_4756_,X_INTRODUCED_4757_,X_INTRODUCED_4758_,X_INTRODUCED_4759_|X_INTRODUCED_4760_,X_INTRODUCED_4761_,X_INTRODUCED_4762_,X_INTRODUCED_4763_,X_INTRODUCED_4764_,X_INTRODUCED_4765_|];
